//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppSecAssignment_2021.AS_Service_Reference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/AS_DB_Service")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/AS_DB_Service.Entity")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccountLockExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PasswordAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PasswordChangeCoolDownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHash_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHash_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccountLockExpiry {
            get {
                return this.AccountLockExpiryField;
            }
            set {
                if ((this.AccountLockExpiryField.Equals(value) != true)) {
                    this.AccountLockExpiryField = value;
                    this.RaisePropertyChanged("AccountLockExpiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountLocked {
            get {
                return this.AccountLockedField;
            }
            set {
                if ((this.AccountLockedField.Equals(value) != true)) {
                    this.AccountLockedField = value;
                    this.RaisePropertyChanged("AccountLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCardInfo {
            get {
                return this.CreditCardInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardInfoField, value) != true)) {
                    this.CreditCardInfoField = value;
                    this.RaisePropertyChanged("CreditCardInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IV {
            get {
                return this.IVField;
            }
            set {
                if ((object.ReferenceEquals(this.IVField, value) != true)) {
                    this.IVField = value;
                    this.RaisePropertyChanged("IV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PasswordAge {
            get {
                return this.PasswordAgeField;
            }
            set {
                if ((this.PasswordAgeField.Equals(value) != true)) {
                    this.PasswordAgeField = value;
                    this.RaisePropertyChanged("PasswordAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PasswordChangeCoolDown {
            get {
                return this.PasswordChangeCoolDownField;
            }
            set {
                if ((this.PasswordChangeCoolDownField.Equals(value) != true)) {
                    this.PasswordChangeCoolDownField = value;
                    this.RaisePropertyChanged("PasswordChangeCoolDown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash_1 {
            get {
                return this.PasswordHash_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHash_1Field, value) != true)) {
                    this.PasswordHash_1Field = value;
                    this.RaisePropertyChanged("PasswordHash_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash_2 {
            get {
                return this.PasswordHash_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHash_2Field, value) != true)) {
                    this.PasswordHash_2Field = value;
                    this.RaisePropertyChanged("PasswordHash_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AS_Service_Reference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        AppSecAssignment_2021.AS_Service_Reference.CompositeType GetDataUsingDataContract(AppSecAssignment_2021.AS_Service_Reference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<AppSecAssignment_2021.AS_Service_Reference.CompositeType> GetDataUsingDataContractAsync(AppSecAssignment_2021.AS_Service_Reference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        int CreateUser(string firstname, string lastname, string passwordHash, string passwordSalt, string email, string creditcardinfo, string iv, string key, System.DateTime dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(string firstname, string lastname, string passwordHash, string passwordSalt, string email, string creditcardinfo, string iv, string key, System.DateTime dob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUser", ReplyAction="http://tempuri.org/IService1/GetAllUserResponse")]
        AppSecAssignment_2021.AS_Service_Reference.User[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUser", ReplyAction="http://tempuri.org/IService1/GetAllUserResponse")]
        System.Threading.Tasks.Task<AppSecAssignment_2021.AS_Service_Reference.User[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOneUser", ReplyAction="http://tempuri.org/IService1/GetOneUserResponse")]
        AppSecAssignment_2021.AS_Service_Reference.User GetOneUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOneUser", ReplyAction="http://tempuri.org/IService1/GetOneUserResponse")]
        System.Threading.Tasks.Task<AppSecAssignment_2021.AS_Service_Reference.User> GetOneUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetAccountLockOut", ReplyAction="http://tempuri.org/IService1/SetAccountLockOutResponse")]
        int SetAccountLockOut(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetAccountLockOut", ReplyAction="http://tempuri.org/IService1/SetAccountLockOutResponse")]
        System.Threading.Tasks.Task<int> SetAccountLockOutAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveAccountLockOut", ReplyAction="http://tempuri.org/IService1/RemoveAccountLockOutResponse")]
        int RemoveAccountLockOut(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveAccountLockOut", ReplyAction="http://tempuri.org/IService1/RemoveAccountLockOutResponse")]
        System.Threading.Tasks.Task<int> RemoveAccountLockOutAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        int ChangePassword(string email, string new_password_hash, string old_pw_hash, string password_hash_1, string password_hash_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        System.Threading.Tasks.Task<int> ChangePasswordAsync(string email, string new_password_hash, string old_pw_hash, string password_hash_1, string password_hash_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDBHash", ReplyAction="http://tempuri.org/IService1/getDBHashResponse")]
        string getDBHash(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDBHash", ReplyAction="http://tempuri.org/IService1/getDBHashResponse")]
        System.Threading.Tasks.Task<string> getDBHashAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDBSalt", ReplyAction="http://tempuri.org/IService1/getDBSaltResponse")]
        string getDBSalt(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDBSalt", ReplyAction="http://tempuri.org/IService1/getDBSaltResponse")]
        System.Threading.Tasks.Task<string> getDBSaltAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AppSecAssignment_2021.AS_Service_Reference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AppSecAssignment_2021.AS_Service_Reference.IService1>, AppSecAssignment_2021.AS_Service_Reference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public AppSecAssignment_2021.AS_Service_Reference.CompositeType GetDataUsingDataContract(AppSecAssignment_2021.AS_Service_Reference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<AppSecAssignment_2021.AS_Service_Reference.CompositeType> GetDataUsingDataContractAsync(AppSecAssignment_2021.AS_Service_Reference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int CreateUser(string firstname, string lastname, string passwordHash, string passwordSalt, string email, string creditcardinfo, string iv, string key, System.DateTime dob) {
            return base.Channel.CreateUser(firstname, lastname, passwordHash, passwordSalt, email, creditcardinfo, iv, key, dob);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(string firstname, string lastname, string passwordHash, string passwordSalt, string email, string creditcardinfo, string iv, string key, System.DateTime dob) {
            return base.Channel.CreateUserAsync(firstname, lastname, passwordHash, passwordSalt, email, creditcardinfo, iv, key, dob);
        }
        
        public AppSecAssignment_2021.AS_Service_Reference.User[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<AppSecAssignment_2021.AS_Service_Reference.User[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public AppSecAssignment_2021.AS_Service_Reference.User GetOneUser(string email) {
            return base.Channel.GetOneUser(email);
        }
        
        public System.Threading.Tasks.Task<AppSecAssignment_2021.AS_Service_Reference.User> GetOneUserAsync(string email) {
            return base.Channel.GetOneUserAsync(email);
        }
        
        public int SetAccountLockOut(string email) {
            return base.Channel.SetAccountLockOut(email);
        }
        
        public System.Threading.Tasks.Task<int> SetAccountLockOutAsync(string email) {
            return base.Channel.SetAccountLockOutAsync(email);
        }
        
        public int RemoveAccountLockOut(string email) {
            return base.Channel.RemoveAccountLockOut(email);
        }
        
        public System.Threading.Tasks.Task<int> RemoveAccountLockOutAsync(string email) {
            return base.Channel.RemoveAccountLockOutAsync(email);
        }
        
        public int ChangePassword(string email, string new_password_hash, string old_pw_hash, string password_hash_1, string password_hash_2) {
            return base.Channel.ChangePassword(email, new_password_hash, old_pw_hash, password_hash_1, password_hash_2);
        }
        
        public System.Threading.Tasks.Task<int> ChangePasswordAsync(string email, string new_password_hash, string old_pw_hash, string password_hash_1, string password_hash_2) {
            return base.Channel.ChangePasswordAsync(email, new_password_hash, old_pw_hash, password_hash_1, password_hash_2);
        }
        
        public string getDBHash(string email) {
            return base.Channel.getDBHash(email);
        }
        
        public System.Threading.Tasks.Task<string> getDBHashAsync(string email) {
            return base.Channel.getDBHashAsync(email);
        }
        
        public string getDBSalt(string email) {
            return base.Channel.getDBSalt(email);
        }
        
        public System.Threading.Tasks.Task<string> getDBSaltAsync(string email) {
            return base.Channel.getDBSaltAsync(email);
        }
    }
}
